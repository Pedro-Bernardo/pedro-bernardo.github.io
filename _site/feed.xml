<feed xmlns="http://www.w3.org/2005/Atom"> <id>http://localhost:4000</id><title>Pedro Bernardo</title><subtitle>A minimal, portfolio, sidebar, bootstrap Jekyll theme with responsive web design and focuses on text presentation.</subtitle> <updated>2020-02-17T03:49:53+08:00</updated> <author> <name>Pedro Bernardo</name> <uri>http://localhost:4000</uri> </author><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000" rel="alternate" type="text/html" /> <generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator> <rights> © 2020 Pedro Bernardo </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Dark Honya -- nullcon HackIM 2020</title><link href="http://localhost:4000/posts/nullcon20_dark_honya/" rel="alternate" type="text/html" title="Dark Honya -- nullcon HackIM 2020" /><published>2020-02-09T00:00:00+08:00</published> <updated>2020-02-17T03:49:53+08:00</updated> <id>http://localhost:4000/posts/nullcon20_dark_honya/</id> <content src="http://localhost:4000/posts/nullcon20_dark_honya/" /> <author> <name>Pedro Bernardo</name> </author> <category term="CTF Writeups" /> <summary>With Jorge and jofra Points: 460 (dynamic) TL;DR Null byte overflow on heap chunk Free overflown chunk Overwrite ptr array Write printf@plt on free@got to obtain a libc leak Write syst...</summary> </entry> <entry><title>Heap Exploitation Lecutre</title><link href="http://localhost:4000/posts/Heap_Exploitation_Lecture/" rel="alternate" type="text/html" title="Heap Exploitation Lecutre" /><published>2019-12-03T00:00:00+08:00</published> <updated>2020-02-17T03:49:53+08:00</updated> <id>http://localhost:4000/posts/Heap_Exploitation_Lecture/</id> <content src="http://localhost:4000/posts/Heap_Exploitation_Lecture/" /> <author> <name>Pedro Bernardo</name> </author> <category term="Lectures" /> <summary>Lecture with Jorge on Glibc’s Heap basics and how to exploit it. We covered the following topics: Chunks and chunk implementation Coalescing Main arena and Bins Tcache Common attacks ...</summary> </entry> <entry><title>Random Vault -- Pwn2Win 2019 CTF</title><link href="http://localhost:4000/posts/Pwn2Win19_random_vault/" rel="alternate" type="text/html" title="Random Vault -- Pwn2Win 2019 CTF" /><published>2019-11-10T00:00:00+08:00</published> <updated>2020-02-17T03:49:53+08:00</updated> <id>http://localhost:4000/posts/Pwn2Win19_random_vault/</id> <content src="http://localhost:4000/posts/Pwn2Win19_random_vault/" /> <author> <name>Pedro Bernardo</name> </author> <category term="CTF Writeups" /> <summary>With Jorge Points: 303 (dynamic) Solves: 18 TL;DR Only two Format String vulnerability allowed. Use first Format String to bypass PIE mitigation Use second Format String to: cha...</summary> </entry> <entry><title>SPlaid Birch -- Plaid CTF 2019</title><link href="http://localhost:4000/posts/PlaidCTF19_splaid_birch/" rel="alternate" type="text/html" title="SPlaid Birch -- Plaid CTF 2019" /><published>2019-04-19T00:00:00+08:00</published> <updated>2020-02-17T03:49:53+08:00</updated> <id>http://localhost:4000/posts/PlaidCTF19_splaid_birch/</id> <content src="http://localhost:4000/posts/PlaidCTF19_splaid_birch/" /> <author> <name>Pedro Bernardo</name> </author> <category term="CTF Writeups" /> <summary>With jofra Points: 300 Solves: 41 Description: I make sure never to use scanf(“%s”) when doing competitive programming so that my solutions don’t have buffer overflows. But writing algori...</summary> </entry> <entry><title>Artificial Intelligence Course Project</title><link href="http://localhost:4000/posts/Artificial_inteligence_coursework/" rel="alternate" type="text/html" title="Artificial Intelligence Course Project" /><published>2018-12-23T00:00:00+08:00</published> <updated>2020-02-17T03:49:53+08:00</updated> <id>http://localhost:4000/posts/Artificial_inteligence_coursework/</id> <content src="http://localhost:4000/posts/Artificial_inteligence_coursework/" /> <author> <name>Pedro Bernardo</name> </author> <category term="Course Work" /> <summary> Grade: 19/20 Tools: Python Agent for solving Solitaire Puzzle Game given a board state Bayesian Network Module and Reinforcement Learning (Q-learning) implementation </summary> </entry> </feed>
