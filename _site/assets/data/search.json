[ { "title": "Dark Honya -- nullcon HackIM 2020", "url": "/posts/nullcon20_dark_honya/", "categories": "CTF Writeups", "tags": "nullcon20, pwn", "date": "2020-02-09 00:00:00 +0800", "snippet": "With Jorge and jofraPoints: 460 (dynamic)TL;DR Null byte overflow on heap chunk Free overflown chunk Overwrite ptr array Write printf@plt on free@got to obtain a libc leak Write system on atoi@got to get a shellBinary Mitigations12345Arch: amd64-64-littleRELRO: Partial RELROStack: ..." }, { "title": "Heap Exploitation Lecutre", "url": "/posts/Heap_Exploitation_Lecture/", "categories": "Lectures", "tags": "pwn, heap", "date": "2019-12-03 00:00:00 +0800", "snippet": "Lecture with Jorge on Glibc’s Heap basics and how to exploit it.We covered the following topics: Chunks and chunk implementation Coalescing Main arena and Bins Tcache Common attacksThe lecture slides can be downloaded here" }, { "title": "Random Vault -- Pwn2Win 2019 CTF", "url": "/posts/Pwn2Win19_random_vault/", "categories": "CTF Writeups", "tags": "pwn2win, pwn", "date": "2019-11-10 00:00:00 +0800", "snippet": "With JorgePoints: 303 (dynamic)Solves: 18TL;DR Only two Format String vulnerability allowed. Use first Format String to bypass PIE mitigation Use second Format String to: change srand() seed value change function pointer Built shellcode and get shellReversingBinary Mitigat..." }, { "title": "SPlaid Birch -- Plaid CTF 2019", "url": "/posts/PlaidCTF19_splaid_birch/", "categories": "CTF Writeups", "tags": "plaid2019, pwn", "date": "2019-04-19 00:00:00 +0800", "snippet": "With jofraPoints: 300Solves: 41Description: I make sure never to use scanf(“%s”) when doing competitive programming so that my solutions don’t have buffer overflows. But writing algorithms is hard.ReconWe are given an ELF 64-bit x86/64 stripped binary, a libc and an external library lisplaid.s..." }, { "title": "Artificial Intelligence Course Project", "url": "/posts/Artificial_inteligence_coursework/", "categories": "Course Work", "tags": "AI", "date": "2018-12-23 00:00:00 +0800", "snippet": " Grade: 19/20Tools: Python Agent for solving Solitaire Puzzle Game given a board state Bayesian Network Module and Reinforcement Learning (Q-learning) implementation " }, { "title": "Computer Networks", "url": "/posts/Computer_Networks/", "categories": "Course Work", "tags": "computer networks", "date": "2018-12-23 00:00:00 +0800", "snippet": " Grade: 17/20Tools: C++source codeFile Backup Application, with Client App, Control Server and Backup Server programs." }, { "title": "Databases", "url": "/posts/Databases/", "categories": "Course Work", "tags": "databases", "date": "2018-11-17 00:00:00 +0800", "snippet": " Grade: 17.2/20Tools: HTML, CSS, PHP, PostgreSQLsource codeDemo: Forest Fire Control Management System" }, { "title": "Computer Graphics", "url": "/posts/Computer_graphics/", "categories": "Course Work", "tags": "graphics", "date": "2018-11-08 00:00:00 +0800", "snippet": " Grade: 19.9/20Tools: HTML5, Javascript, Three.jsA series of computer graphics demos written in Three.js. Interactive Animation and basic 3D Object Modulation iPerspective Cameras, Autonomous Movement and Collision Detection Materials and different Light Sources Textures, Point Light, Pause ..." }, { "title": "shell-&gt;code -- CSAW2018 Quals", "url": "/posts/CSAW18_shell-code/", "categories": "CTF Writeups", "tags": "csaw18, pwn", "date": "2018-09-20 00:00:00 +0800", "snippet": "Points: 100Solves: 261Description: Linked lists are great! They let you chain pieces of data together. nc pwn.chal.csaw.io 9005 flag format: flag{...}Given:shellpointcodeIntroductionshell-&amp;gt;code was a 100 points pwn challenge on the CSAW’18 CTF Qualification RoundReversing (The Problem)T..." }, { "title": "Human Computer Interaction", "url": "/posts/Human_computer_interaction/", "categories": "Course Work", "tags": "interfaces", "date": "2018-05-25 00:00:00 +0800", "snippet": " Grade: 18.93/20Tools: HTML5, CSS, JavascriptSmartwatch interface prototype for a music festival accessory. Group webpage iRave Final Verison" } ]
